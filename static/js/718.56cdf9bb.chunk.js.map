{"version":3,"file":"static/js/718.56cdf9bb.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","webpack://goit-react-hw-05-movies/./src/components/MoviesGallery/MovieItem/MovieItem.module.css?a5e7","components/MoviesGallery/MovieItem/MovieItem.jsx","webpack://goit-react-hw-05-movies/./src/components/MoviesGallery/MoviesGallery.module.css?276e","components/MoviesGallery/MoviesGallery.jsx","webpack://goit-react-hw-05-movies/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","pages/Movies.jsx","resurces/resurses.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Button\":\"Button_Button__Smq3v\"};","import css from './Button.module.css'\nimport PropTypes from 'prop-types';\nexport const Button = ({onClick}) => {\n    return (\n        <button  type='button' className={css.Button} onClick={onClick}>Load more</button>\n    )\n}\nButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"GalleryItem\":\"MovieItem_GalleryItem__tOTn7\",\"GalleryItem_image\":\"MovieItem_GalleryItem_image__GloLE\",\"movieTitle\":\"MovieItem_movieTitle__vvSk6\",\"movieRelise\":\"MovieItem_movieRelise__ElFcz\"};","import { Link, useLocation } from \"react-router-dom\";\nimport css from './MovieItem.module.css'\nconst defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nconst MovieItem = ({movie, alt}) => {\n    const { id, poster_path: posterImage, title, release_date} = movie;\n\n  const location = useLocation();\n  \n  \n    const urlPoster = 'https://image.tmdb.org/t/p/w500';\n    const url =  posterImage ? `${urlPoster}${posterImage}` : defaultImg;\n    return (\n      <li className={css.GalleryItem}> \n        \n        <Link  to={`/movies/${id}`} state={{ from: location }}>\n        <img className={css.GalleryItem_image} src={url} width={200} alt={alt} />\n        </Link>\n        <h2 className={css.movieTitle}>{title}</h2>\n        <p className={css.movieRelise}>Release date: <br/> {release_date }</p>\n    </li>\n    )\n}\nexport default MovieItem;","// extracted by mini-css-extract-plugin\nexport default {\"moviesGallery\":\"MoviesGallery_moviesGallery__2a3z1\",\"container\":\"MoviesGallery_container__p0OR5\"};","import { Button } from \"components/Button/Button\"\nimport { Loader } from \"components/Loader/Loader\";\nimport { nanoid } from \"nanoid\";\nimport MovieItem from \"./MovieItem/MovieItem\";\nimport css from './MoviesGallery.module.css'\n\n\nconst MoviesGallery = ({ results, alt, totalResults, clickInLoadMore, isLoading, querySearch }) => {\n    const showButton = results.length > 0 && results.length < totalResults;\n    const showPoster = Array.isArray(results) && results.length > 0;\n     return (\n        <section className={css.container}>\n             {showPoster && !querySearch && <h1>Popular movies today</h1>}\n             {querySearch&&showPoster&& <h2>Found movies on request <span>{querySearch}</span> : { totalResults} </h2>}\n            <ul className={css.moviesGallery}>\n            {showPoster&& results.map(movie => <MovieItem key={nanoid(10)} movie={movie} alt={ alt} />)}\n         </ul>\n         {isLoading && <Loader />}\n        {showButton &&\n        <Button\n          totalResults={totalResults}\n          onClick={clickInLoadMore} />}\n        </section>\n    )\n}\nexport default MoviesGallery","// extracted by mini-css-extract-plugin\nexport default {\"Searchbar\":\"Searchbar_Searchbar__5WKzV\",\"container\":\"Searchbar_container__tv3qG\",\"SearchForm\":\"Searchbar_SearchForm__XuPyK\",\"SearchForm_button\":\"Searchbar_SearchForm_button__OB9qt\",\"SearchForm_button_label\":\"Searchbar_SearchForm_button_label__s9Ub2\",\"SearchForm_input\":\"Searchbar_SearchForm_input__50Ett\"};","import { Form, Field, Formik } from \"formik\";\n// import { useSearchParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport  css  from './Searchbar.module.css'\nimport { BsSearch } from 'react-icons/bs'\n\nconst Searchbar = ({onSubmit}) => {\n\n  const submitSerchbar = ({ serchText}, actions) => {\n  if (serchText.trim() === '') {\n      return toast.error('Please enter a query to search',\n        {\n          position: \"top-center\",\n          autoClose: 2000,\n        })\n    }\n      onSubmit(serchText);\n    actions.resetForm();\n    }\n\n\n    return (\n          <div className={css.container}>\n            <Formik\n          initialValues={{ serchText: ''}}\n          onSubmit={submitSerchbar}\n        >\n          <Form className={css.SearchForm}>\n            <button type=\"submit\" value='submit' className={css.SearchForm_button}>\n              <BsSearch className={css.SearchForm_button_label} />\n            </button>\n            <Field\n              name='serchText'\n              className={css.SearchForm_input}\n              type=\"text\"\n              autoComplete=\"off\"\n              autoFocus\n              placeholder=\"Search movie\"\n              /> \n          </Form>\n        </Formik>\n        </div>\n        \n    )\n}\nexport default Searchbar;","import MoviesGallery from \"components/MoviesGallery/MoviesGallery\";\nimport Searchbar from \"components/Searchbar/Searchbar\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { serchMovies } from \"resurces/resurses\";\n\nconst Movies = () => {\n    const [serchParams, setSerchParams] = useSearchParams();\n    const [serchText, setserchText] = useState('');\n    const [page, setPage] = useState(1);\n    const [results, setResults] = useState([]);\n    const [totalResults, setTotalResults] = useState(0);\n    const [isLoading, setIsLoading] = useState(false);\n    \n    const querySearch = serchParams.get('query');\n    \n    \n\n\n    useEffect(() => {\n        if (!querySearch) return;\n         async function addData() {\n    try {\n      setIsLoading(true);\n        const newData = await serchMovies(querySearch);\n              \n        if (newData.results.length === 0) {\n        toast.error('Movies not faund',  {\n          position: \"top-center\",\n          autoClose: 2000,\n        })\n        return;\n      }\n      setResults(prevResults => page === 1 ? newData.results : [...prevResults, ...newData.results]);\n      setTotalResults(newData.total_results);\n    } catch (error) {\n      toast.error(`API NOT FAUND: ${error.message}`)\n    } finally {setIsLoading(false)}\n        }\n        addData()\n    }, [page, querySearch]\n    )\n    \nconst clickInLoadMore = () => setPage(prevState => prevState + 1);\n    \n    function hendleSerchSubmit(serchMovie) {\n             if (serchText !== serchMovie) {\n         setSerchParams({\n                       query: serchMovie\n              })\n                 setserchText(querySearch)\n                 setPage(1)\n     }\n    }\n        return (\n       <section>\n  \n            <Searchbar onSubmit={hendleSerchSubmit} />\n            {querySearch &&\n                <MoviesGallery\n                results={results}\n                alt={`poster movies ${results.title}`}\n                totalResults={totalResults}\n                clickInLoadMore={clickInLoadMore}\n                 isLoading={isLoading}\n             querySearch={querySearch}/>\n                }\n        </section>\n    )\n}\nexport default Movies;","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\n\nconst KEY = 'b283a210ed534a6a364c9fa9b60e8619';\nconst BASE_URL = 'https://api.themoviedb.org/3';;\n\nexport async function getTrendingMovies(page) {\n    const url = `${BASE_URL}/trending/movie/day`\n    const options = {\n        params: {\n            api_key: KEY,\n        page: page},\n      \n    };\n    try {\n        const response = await axios(url, options);\n        const dataRespons = await response.data;\n        return dataRespons;\n    }\n    catch (error) {\n        toast.error(`API not faund: ${error.message}`)\n        throw new Error(error.message);\n    }\n}\n\nexport async function getMovieDetails(id) {\n    const url = `${BASE_URL}/movie/${id}`\n    const options = {\n        params: {\n            api_key: KEY,\n            movie_id: id,\n        },    \n    }\n    try {\n        const response = await axios(url, options);\n        const dataRespons = await response.data;\n        return dataRespons;\n    }\n    catch (error) {\n        toast.error(`API not faund: ${error.message}`)\n        throw new Error(error.message);\n    }\n};\n\nexport async function getCastAndReviews(id, getText) {\n    const url = `${BASE_URL}/movie/${id}/${getText}`\n    const options = {\n        params: {\n            api_key: KEY,\n            movie_id: id,\n        },    \n    }\n    try {\n        const response = await axios(url, options);\n        const dataRespons = await response.data;\n        // console.log('dataRespons: ', dataRespons);\n        return dataRespons;\n    }\n    catch (error) {\n        toast.error(`API not faund: ${error.message}`)\n        throw new Error(error.message);\n    }\n};\n\nexport async function serchMovies(serch) {\n    const url = `${BASE_URL}/search/movie`\n    const options = {\n        params: {\n            api_key: KEY,\n            query: serch,\n            },    \n    }\n    try {\n        const response = await axios(url, options);\n        const dataRespons = await response.data;\n        // console.log('dataRespons: ', dataRespons);\n        return dataRespons;\n    }\n    catch (error) {\n        toast.error(`API not faund: ${error.message}`)\n        throw new Error(error.message);\n    }\n}\n"],"names":["Button","onClick","type","className","css","movie","alt","id","posterImage","poster_path","title","release_date","location","useLocation","url","to","state","from","src","width","results","totalResults","clickInLoadMore","isLoading","querySearch","showButton","length","showPoster","Array","isArray","map","nanoid","Loader","onSubmit","initialValues","serchText","actions","trim","toast","position","autoClose","resetForm","value","name","autoComplete","autoFocus","placeholder","useSearchParams","serchParams","setSerchParams","useState","setserchText","page","setPage","setResults","setTotalResults","setIsLoading","get","useEffect","serchMovies","newData","prevResults","total_results","message","addData","serchMovie","query","MoviesGallery","prevState","KEY","BASE_URL","getTrendingMovies","options","params","api_key","axios","response","data","dataRespons","Error","getMovieDetails","movie_id","getCastAndReviews","getText","serch"],"sourceRoot":""}