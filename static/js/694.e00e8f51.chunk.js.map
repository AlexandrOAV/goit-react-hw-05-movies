{"version":3,"file":"static/js/694.e00e8f51.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","webpack://goit-react-hw-05-movies/./src/components/Reviews/ReviewsItem/ReviewsItem.module.css?f262","components/Reviews/ReviewsItem/ReviewsItem.jsx","components/Reviews/Reviews.jsx","resurces/resurses.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Reviews_container__2j80+\"};","// extracted by mini-css-extract-plugin\nexport default {\"headItem\":\"ReviewsItem_headItem__AmoYU\",\"text\":\"ReviewsItem_text__ulIkX\",\"itemRewiew\":\"ReviewsItem_itemRewiew__Zwb2v\"};","import css from './ReviewsItem.module.css'\nconst ReviewsItem = ({\n     author,\n     content,\n    dataContent }) => {\n    return (\n         <li  className={ css.itemRewiew}>\n            <h2 className={css.headItem}>{author}</h2>\n            <p className={css.text}><b>Data conten: { dataContent.slice(0, 19)}</b></p>\n            <p className={css.text}> {content}</p>            \n        </li>\n    )   \n}\nexport default ReviewsItem;","import css from \"./Reviews.module.css\"\nimport { Loader } from \"components/Loader/Loader\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { getCastAndReviews } from \"resurces/resurses\";\nimport ReviewsItem from \"./ReviewsItem/ReviewsItem\";\n\nconst Reviews = () => {\n    const { id } = useParams();\n    const [isLoading, setIsLoading] = useState(false);\n    const [reviews, setReviews] = useState([]);\n    \nuseEffect(() => {\n        if (!id) return;\n        inReviews(id )\n     }, [id]);  \n\n    async function inReviews(id) {\n         try {\n      setIsLoading(true);\n             const newData = await getCastAndReviews(id, 'reviews');\n             setReviews(newData.results)\n            }\n      catch (error) {\n      toast.error(`API NOT FAUND: ${error.message}`)\n    } finally {setIsLoading(false)}\n    }\n\n    const showReviews = Array.isArray(reviews) && reviews.length > 0;\n    return (\n     <section className={css.container}>\n            {isLoading && <Loader />}\n            <h1>Reviews</h1>\n             {reviews.length === 0 && <p>Sorry, but no rewiews</p>}\n            <ul >\n                {showReviews&&\n                    reviews.map(({ id, author, content, updated_at}) => \n                        <ReviewsItem\n                            key={id}\n                            author={author}\n                            content={content}\n                            dataContent={updated_at}/>\n                    )\n                }\n            </ul>\n        </section>\n    )\n}\nexport default Reviews;","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\n\nconst KEY = 'b283a210ed534a6a364c9fa9b60e8619';\nconst BASE_URL = 'https://api.themoviedb.org/3';;\n\nexport async function getTrendingMovies(page) {\n    const url = `${BASE_URL}/trending/movie/day`\n    const options = {\n        params: {\n            api_key: KEY,\n        page: page},\n      \n    };\n    try {\n        const response = await axios(url, options);\n        const dataRespons = await response.data;\n        return dataRespons;\n    }\n    catch (error) {\n        toast.error(`API not faund: ${error.message}`)\n        throw new Error(error.message);\n    }\n}\n\nexport async function getMovieDetails(id) {\n    const url = `${BASE_URL}/movie/${id}`\n    const options = {\n        params: {\n            api_key: KEY,\n            movie_id: id,\n        },    \n    }\n    try {\n        const response = await axios(url, options);\n        const dataRespons = await response.data;\n        return dataRespons;\n    }\n    catch (error) {\n        toast.error(`API not faund: ${error.message}`)\n        throw new Error(error.message);\n    }\n};\n\nexport async function getCastAndReviews(id, getText) {\n    const url = `${BASE_URL}/movie/${id}/${getText}`\n    const options = {\n        params: {\n            api_key: KEY,\n            movie_id: id,\n        },    \n    }\n    try {\n        const response = await axios(url, options);\n        const dataRespons = await response.data;\n        // console.log('dataRespons: ', dataRespons);\n        return dataRespons;\n    }\n    catch (error) {\n        toast.error(`API not faund: ${error.message}`)\n        throw new Error(error.message);\n    }\n};\n\nexport async function serchMovies(serch) {\n    const url = `${BASE_URL}/search/movie`\n    const options = {\n        params: {\n            api_key: KEY,\n            query: serch,\n            },    \n    }\n    try {\n        const response = await axios(url, options);\n        const dataRespons = await response.data;\n        // console.log('dataRespons: ', dataRespons);\n        return dataRespons;\n    }\n    catch (error) {\n        toast.error(`API not faund: ${error.message}`)\n        throw new Error(error.message);\n    }\n}\n"],"names":["author","content","dataContent","className","css","slice","id","useParams","useState","isLoading","setIsLoading","reviews","setReviews","getCastAndReviews","newData","results","toast","message","useEffect","inReviews","showReviews","Array","isArray","length","Loader","map","updated_at","KEY","BASE_URL","getTrendingMovies","page","url","options","params","api_key","axios","response","data","dataRespons","Error","getMovieDetails","movie_id","getText","serchMovies","serch","query"],"sourceRoot":""}